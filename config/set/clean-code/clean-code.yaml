services:
    Rector\CodingStyle\Rector\If_\NullableCompareToNullRector: ~
    Rector\CodingStyle\Rector\FuncCall\SimpleArrayCallableToStringRector: ~
    #Rector\CodingStyle\Rector\Identical\IdenticalFalseToBooleanNotRector: ~ # INFO: do not use implicitly comparision values !
    Rector\CodingStyle\Rector\Switch_\BinarySwitchToIfElseRector: ~
    Rector\CodingStyle\Rector\FuncCall\ConsistentImplodeRector: ~
    Rector\CodingStyle\Rector\Use_\RemoveUnusedAliasRector: ~

    #Rector\CodingStyle\Rector\ClassMethod\YieldClassMethodToArrayClassMethodRector: ~ # INFO: requires configuration
    #Rector\CodingStyle\Rector\ClassMethod\ReturnArrayClassMethodToYieldRector: ~ # INFO: requires configuration
    Rector\CodingStyle\Rector\String_\SymplifyQuoteEscapeRector: ~
    Rector\CodingStyle\Rector\ClassConst\SplitGroupedConstantsAndPropertiesRector: ~
    Rector\CodingStyle\Rector\String_\SplitStringClassConstantToClassConstFetchRector: ~
    #Rector\CodingStyle\Rector\Namespace_\ImportFullyQualifiedNamesRector: ~ # TODO?: do the opposite for better readability

    Rector\Php55\Rector\String_\StringClassNameToClassConstantRector: ~
    #Rector\CodingStyle\Rector\FuncCall\ConsistentPregDelimiterRector: ~ # TODO?: preg_quote is not supported?
    Rector\CodingStyle\Rector\Include_\FollowRequireByDirRector: ~
    #Rector\CodingStyle\Rector\Catch_\CatchExceptionNameMatchingTypeRector: ~ # INFO: maybe the variable name from the dev is even more valuable?
    #Rector\CodingStyle\Rector\Assign\UseIncrementAssignRector: ~ # TODO: use $i = $i + 1 instead - maybe not best performance, but better readability
    Rector\CodingStyle\Rector\Assign\SplitDoubleAssignRector: ~

    Rector\CodingStyle\Rector\ClassConst\VarConstantCommentRector: ~
    Rector\CodingStyle\Rector\Encapsed\EncapsedStringsToSprintfRector: ~
    Rector\CodingStyle\Rector\ClassMethod\NewlineBeforeNewAssignSetRector: ~
    Rector\CodingStyle\Rector\String_\ManualJsonStringToJsonEncodeArrayRector: ~
    #Rector\CodingStyle\Rector\Class_\AddArrayDefaultToArrayPropertyRector: ~ # INFO: maybe the phpdoc is not correct, or is this already checked? Active only for private properties?
    Rector\CodingStyle\Rector\ClassMethod\MakeInheritedMethodVisibilitySameAsParentRector: ~
    Rector\CodingStyle\Rector\FuncCall\CallUserFuncCallToVariadicRector: ~
    Rector\CodingStyle\Rector\FuncCall\VersionCompareFuncCallToConstantRector: ~
    Rector\CodingStyle\Rector\FuncCall\FunctionCallToConstantRector:
        $functionsToConstants:
            php_sapi_name: PHP_SAPI
            pi: M_PI

    #Rector\CodeQuality\Rector\Assign\CombinedAssignRector: ~ # TODO: do the opposite for better readability
    #Rector\CodeQuality\Rector\BooleanAnd\SimplifyEmptyArrayCheckRector: ~ # TODO: use "count($array) === 0" - maybe not best performance, but better readability
    Rector\CodeQuality\Rector\Foreach_\ForeachToInArrayRector: ~
    #Rector\CodeQuality\Rector\Foreach_\SimplifyForeachToCoalescingRector: ~ # TODO: do the opposite (avoid ??) for better readability
    Rector\CodeQuality\Rector\FuncCall\InArrayAndArrayKeysToArrayKeyExistsRector: ~
    Rector\CodeQuality\Rector\FuncCall\SimplifyFuncGetArgsCountRector: ~
    Rector\CodeQuality\Rector\FuncCall\SimplifyInArrayValuesRector: ~
    Rector\CodeQuality\Rector\FuncCall\SimplifyStrposLowerRector: ~
    Rector\CodeQuality\Rector\Identical\GetClassToInstanceOfRector: ~
    Rector\CodeQuality\Rector\Identical\SimplifyArraySearchRector: ~
    Rector\CodeQuality\Rector\Identical\SimplifyConditionsRector: ~
    Rector\CodeQuality\Rector\If_\SimplifyIfNotNullReturnRector: ~
    #Rector\CodeQuality\Rector\If_\SimplifyIfReturnBoolRector: ~ # INFO: do not use implicitly return values !== false
    #Rector\CodeQuality\Rector\Return_\SimplifyUselessVariableRector: ~ # INFO: do not remove valuable variable names: $payed_by_customer = true;
    #Rector\CodeQuality\Rector\Ternary\UnnecessaryTernaryExpressionRector: ~ # TODO: ternary to if-statement, for better readability

    Rector\Php71\Rector\FuncCall\RemoveExtraParametersRector: ~
    Rector\CodeQuality\Rector\BinaryOp\SimplifyDeMorganBinaryRector: ~
    Rector\CodeQuality\Rector\Ternary\SimplifyTautologyTernaryRector: ~
    Rector\CodeQuality\Rector\Foreach_\SimplifyForeachToArrayFilterRector: ~
    Rector\CodeQuality\Rector\FuncCall\SingleInArrayToCompareRector: ~
    #Rector\CodeQuality\Rector\If_\SimplifyIfElseToTernaryRector: ~ # INFO: Avoid Ternary Conditional Operator
    Rector\CodeQuality\Rector\Concat\JoinStringConcatRector: ~
    #Rector\CodeQuality\Rector\If_\ConsecutiveNullCompareReturnsToNullCoalesceQueueRector: ~ # INFO: Avoid NULL Coalescing Operator
    #Rector\CodeQuality\Rector\If_\SimplifyIfIssetToNullCoalescingRector: ~ # INFO: Avoid NULL Coalescing Operator
    Rector\CodeQuality\Rector\If_\ExplicitBoolCompareRector: ~
    Rector\CodeQuality\Rector\Equal\UseIdenticalOverEqualWithSameTypeRector: ~
    #Rector\CodeQuality\Rector\Ternary\SimplifyDuplicatedTernaryRector: ~ # INFO: Avoid Ternary Operator
    Rector\CodeQuality\Rector\Identical\SimplifyBoolIdenticalTrueRector: ~
    Rector\CodeQuality\Rector\FuncCall\SimplifyRegexPatternRector: ~ # IDEA: use unicode-regex https://github.com/kalessil/phpinspectionsea/issues/1299

    Rector\CodeQuality\Rector\Identical\BooleanNotIdenticalToNotIdenticalRector: ~
    Rector\CodeQuality\Rector\Array_\CallableThisArrayToAnonymousFunctionRector: ~
    Rector\CodeQuality\Rector\LogicalAnd\AndAssignsToSeparateLinesRector: ~
    Rector\CodeQuality\Rector\For_\ForToForeachRector: ~
    Rector\CodeQuality\Rector\FuncCall\CompactToVariablesRector: ~
    Rector\CodeQuality\Rector\Class_\CompleteDynamicPropertiesRector: ~
    Rector\CodeQuality\Rector\FuncCall\IsAWithStringWithThirdArgumentRector: ~
    Rector\CodeQuality\Rector\FuncCall\StrlenZeroToIdenticalEmptyStringRector: ~
    Rector\CodeQuality\Rector\If_\RemoveAlwaysTrueConditionSetInConstructorRector: ~
    Rector\CodeQuality\Rector\Catch_\ThrowWithPreviousExceptionRector: ~
    Rector\CodeQuality\Rector\FuncCall\RemoveSoleValueSprintfRector: ~
    Rector\CodeQuality\Rector\If_\ShortenElseIfRector: ~
